imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

parameters:
  country_code: BY
  currency_code: BYR
  security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
      locale: %locale%
    form:
      resources:
          - ::fields.html.twig
          - ShtumiUsefulBundle::fields.html.twig
          - ShopShippingBundle::fields.html.twig
          - WeastyDoctrineBundle::fields.html.twig
          - WeastyMoneyBundle::fields.html.twig
          - WeastyAdminBundle::fields.html.twig

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ WeastyGeonamesBundle ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"
        yui_css:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor.2.4.8.jar"
        yui_js:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor.2.4.8.jar"

# Doctrine Configuration
doctrine:
    dbal:
      default_connection: default
      connections:
        default:
          driver:   "%database_driver%"
          host:     "%database_host%"
          port:     "%database_port%"
          dbname:   "%database_name%"
          user:     "%database_user%"
          password: "%database_password%"
          charset:  UTF8
          # if using pdo_sqlite as your database driver, add the path in parameters.yml
          # e.g. database_path: "%kernel.root_dir%/data/data.db3"
          # path:     "%database_path%"
          options:
            1002: "SET NAMES UTF8"
      types:
          json: Sonata\Doctrine\Types\JsonType
    orm:
      auto_generate_proxy_classes: "%kernel.debug%"
      default_entity_manager: default
      entity_managers:
        default:
          auto_mapping: true
          metadata_cache_driver:
              type: memcache
              host: localhost
              port: 11211
              instance_class: Memcache
          query_cache_driver:
              type: memcache
              host: localhost
              port: 11211
              instance_class: Memcache
          result_cache_driver:
              type: memcache
              host: localhost
              port: 11211
              instance_class: Memcache
          mappings:
              ApplicationSonataMediaBundle: ~
              SonataMediaBundle: ~
          dql:
            string_functions:
              find_in_set: DoctrineExtensions\Query\Mysql\FindInSet

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Shop\UserBundle\Entity\AbstractUser
    group:
        group_class: Shop\UserBundle\Entity\UserGroup

sonata_admin:
#    security:
#        handler: sonata.admin.security.handler.acl
#        # acl security information
#        information:
#            GUEST:    [VIEW, LIST]
#            STAFF:    [EDIT, LIST, CREATE]
#            EDITOR:   [OPERATOR, EXPORT]
#            ADMIN:    [MASTER]
#        # permissions not related to an object instance and also to be available when objects do not exist
#        # the DELETE admin permission means the user is allowed to batch delete objects
#        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]
#        # permission related to the objects
#        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]

sonata_media:
    default_context: default
    db_driver: doctrine_orm
    contexts:
        default:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 220, quality: 100 }
                small_square: { width: 220, height: 220, quality: 100 }
                medium:   { width: 350, quality: 100 }

        image:
            providers:
                - sonata.media.provider.image
            formats:
                tiny: { width: 100, quality: 100 }
                tiny_square: { width: 100, height: 100, quality: 100 }
                small: { width: 220, quality: 100 }
                small_square: { width: 220, height: 220, quality: 100 }
                medium:   { width: 350, quality: 100 }
                medium_square:   { width: 350, height: 350, quality: 100 }

        action_image:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 220, quality: 100 }
                small_square: { width: 220, height: 220, quality: 100 }
                small_rectangle: { width: 220, height: 150, quality: 100 }
                medium:   { width: 350, quality: 100 }
                medium_rectangle:   { width: 300, height: 150, quality: 100 }
                large_rectangle:   { width: 500, height: 150, quality: 100 }

        news_image:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 220, quality: 100 }
                small_square: { width: 220, height: 220, quality: 100 }
                medium:   { width: 350, quality: 100 }
                medium_rectangle:   { width: 300, height: 150, quality: 100 }
                large_rectangle:   { width: 500, height: 150, quality: 100 }

        icon:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 30, quality: 100 }
                small_square: { width: 30, height: 30, quality: 100 }
                medium:   { width: 50, quality: 100 }
                large:   { width: 100, quality: 100 }

        parameter_option:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 100, quality: 100 }
                small_square: { width: 100, height: 100, quality: 100 }
                medium:   { width: 350, quality: 100 }

    cdn:
        server:
            path: /uploads/media

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     true
    providers:
        image:
#            resizer: sonata.media.resizer.square
#            resizer: sonata.media.resizer.simple
            resizer: weasty_admin.media.resizer.rectangle

sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]

ivory_ck_editor:
    default_config: default
    configs:
        default:
            #filebrowserBrowseRoute: shop_admin_media_browser
            filebrowserImageBrowseRoute: shop_admin_media_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
                context: image
            #filebrowserUploadRoute: shop_admin_media_upload
            #filebrowserUploadRouteParameters:
            #    provider: sonata.media.provider.file
            filebrowserImageUploadRoute: shop_admin_media_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
                context: image

coop_tilleuls_ck_editor_sonata_media:
  templates:
#  @TODO use WeastyResourceBundle views to translate providers and file types
#      browser: WeastyResourceBundle:MediaAdmin:browser.html.twig
#      layout: WeastyResourceBundle:MediaAdmin:layout.html.twig
#      upload: null

shtumi_useful:
    autocomplete_entities:
        proposals:
            class: ShopCatalogBundle:Proposal
            search: contains

simple_things_entity_audit:
    audited_entities:
        - Shop\CatalogBundle\Entity\CustomerOrder
        - Shop\CatalogBundle\Entity\CustomerOrderProposal
weasty_catalog:
  category:
    entity:
      class: %shop_catalog.category.entity.class%
    repository:
      class: %shop_catalog.category.repository.class%
  proposal:
    entity:
      class: %shop_catalog.proposal.entity.class%
    repository:
      class: %shop_catalog.proposal.repository.class%